@using MattParkerDev.WebUI.Services
@using System.Net

@inject HttpClient Http

<MudText Typo="Typo.h2" GutterBottom="true">@BlogTitle</MudText>
@if (PublishedDate is not null)
{
    <MudText Class="mb-6" Style="font-style: italic" Typo="Typo.subtitle1" GutterBottom="true">Published by Matt Parker on @PublishedDate.Value.ToLocalTime().</MudText>
}
<style>
    pre code.hljs {
        margin-bottom: 1.25em;
    }
</style>
<MudMarkdown CodeBlockTheme="CodeBlockTheme.Vs2015" Value="@MarkdownContent" />

@code {

    [Parameter]
    public string BlogSlug { get; set; } = default!;
    
    private string BlogTitle { get; set; } = string.Empty;
    private string MarkdownContent { get; set; } = string.Empty;
    private DateTimeOffset? PublishedDate { get; set; } = null;
    
    protected override async Task OnParametersSetAsync()
    {
        var blog = BlogService.GetBlogBySlug(BlogSlug);
        if (blog is null)
        {
            BlogTitle = "404 Not Found 😢";
            MarkdownContent = "Head back to [blogs!](/blog)";
            return;
        }
        try
        {
            var blogContent = await Http.GetStringAsync($"_blogs/{blog.Slug}/{blog.Slug}.md");
            BlogTitle = blog.Title;
            MarkdownContent = blogContent;
            PublishedDate = blog.PublishedDate;
        }
        catch (HttpRequestException e) when (e.StatusCode == HttpStatusCode.NotFound)
        {
            BlogTitle = "404 Not Found 😢";
            MarkdownContent = "Head back to [blogs!](/blog)";
        }
    }
}