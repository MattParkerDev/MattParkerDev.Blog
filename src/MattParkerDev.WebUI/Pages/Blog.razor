@page "/blog"
@page "/blog/{blogslug}"

@using MattParkerDev.WebUI.Services

<PageTitle>@_browserTabTitle</PageTitle>

@if (BlogSlug is not null)
{
    <BlogArticleRenderer BlogSlug="@BlogSlug" />
}
else
{
    <MudText Typo="Typo.h3" GutterBottom="true">Blog</MudText>
    <MudGrid>
        @foreach(var blog in BlogService.Blogs.OrderBy(s => s.Sequence))
        {
            <MudItem xs="12" sm="6" md="4" lg="3" xl="3">
                <BlogPreviewCard Title="@blog.Title" Description="@blog.Description" Slug="@blog.Slug" />
            </MudItem>
        }
        @for (var i = 0; i < 7; i++)
        {
            <MudItem xs="12" sm="6" md="4" lg="3" xl="3">
                <GenericSkeletonPost/>
            </MudItem>
        }
    </MudGrid>
}


@code {
    [Parameter]
    public string? BlogSlug { get; set; }

    private string _browserTabTitle = "Blog";

    protected override void OnParametersSet()
    {
        if (BlogSlug is null)
        {
            SetBrowserTabTitle("Blog");
            return;
        }
        if (BlogIsValid(BlogSlug))
        {
            SetBrowserTabTitle(BlogService.GetBlogTitleBySlug(BlogSlug));
        }
        else
        {
            SetBrowserTabTitle("Blog Not Found!");
        }
    }

    private void SetBrowserTabTitle(string title)
    {
        _browserTabTitle = title;
    }
    
    private static bool BlogIsValid(string blogSlug)
    {
        return BlogService.Blogs.Any(b => b.Slug == blogSlug);
    }
}